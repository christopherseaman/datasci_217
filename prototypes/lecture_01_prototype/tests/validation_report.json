{
  "validation_summary": {
    "timestamp": "2025-08-13T06:49:06.346290",
    "total_execution_time": 0.234349,
    "total_tests": 15,
    "passed_tests": 12,
    "failed_tests": 3,
    "success_rate": 0.8,
    "total_errors": 19,
    "total_warnings": 30
  },
  "category_breakdown": {
    "System": {
      "total_tests": 5,
      "passed_tests": 5,
      "success_rate": 1.0,
      "errors": 0,
      "warnings": 0
    },
    "Content": {
      "total_tests": 4,
      "passed_tests": 3,
      "success_rate": 0.75,
      "errors": 1,
      "warnings": 8
    },
    "Infrastructure": {
      "total_tests": 3,
      "passed_tests": 1,
      "success_rate": 0.3333333333333333,
      "errors": 18,
      "warnings": 22
    },
    "Assessment": {
      "total_tests": 3,
      "passed_tests": 3,
      "success_rate": 1.0,
      "errors": 0,
      "warnings": 0
    }
  },
  "critical_issues": [
    "Content - Code Quality Standards: batch_converter.py: Many long lines (11)"
  ],
  "phase2_readiness": {
    "ready": false,
    "critical_failures": 1,
    "readiness_score": 0.8
  },
  "recommendations": [
    "Phase 2 implementation should be delayed until critical issues are resolved",
    "High number of warnings detected - recommend review and optimization"
  ],
  "detailed_results": [
    {
      "test_name": "Demo Script Execution",
      "category": "System",
      "passed": true,
      "execution_time": 0.16011309623718262,
      "errors": [],
      "warnings": [],
      "details": {
        "stdout_length": 1664,
        "sections_tested": 6
      }
    },
    {
      "test_name": "Exercise Scripts Execution",
      "category": "System",
      "passed": true,
      "execution_time": 0.01218724250793457,
      "errors": [],
      "warnings": [],
      "details": {
        "scripts_tested": 2
      }
    },
    {
      "test_name": "Command Line Arguments",
      "category": "System",
      "passed": true,
      "execution_time": 0.046956777572631836,
      "errors": [],
      "warnings": [],
      "details": {}
    },
    {
      "test_name": "Interactive Features",
      "category": "System",
      "passed": true,
      "execution_time": 0.0002543926239013672,
      "errors": [],
      "warnings": [],
      "details": {
        "interactive_scripts_found": 2
      }
    },
    {
      "test_name": "File Operations",
      "category": "System",
      "passed": true,
      "execution_time": 9.560585021972656e-05,
      "errors": [],
      "warnings": [],
      "details": {
        "expected_files": 8,
        "missing_files": 0
      }
    },
    {
      "test_name": "Narrative Quality",
      "category": "Content",
      "passed": true,
      "execution_time": 0.0012125968933105469,
      "errors": [],
      "warnings": [
        "Narrative might be too short: 3681 words",
        "Low engagement language detected"
      ],
      "details": {
        "word_count": 3681,
        "code_blocks": 24,
        "engagement_score": 6
      }
    },
    {
      "test_name": "Learning Progression",
      "category": "Content",
      "passed": true,
      "execution_time": 0.0001571178436279297,
      "errors": [],
      "warnings": [],
      "details": {
        "concepts_found": 7,
        "expected_concepts": 7
      }
    },
    {
      "test_name": "Code Quality Standards",
      "category": "Content",
      "passed": false,
      "execution_time": 0.0046770572662353516,
      "errors": [
        "batch_converter.py: Many long lines (11)"
      ],
      "warnings": [
        "demo_lecture_01.py: Many short variable names",
        "test_validation_suite.py: Many short variable names",
        "euler_problem_1.py: Many short variable names",
        "hello_ds.py: Many short variable names",
        "batch_converter.py: Many short variable names",
        "quality_validator.py: Many short variable names"
      ],
      "details": {
        "files_analyzed": 6,
        "quality_issues": 1
      }
    },
    {
      "test_name": "Documentation Quality",
      "category": "Content",
      "passed": true,
      "execution_time": 0.0007123947143554688,
      "errors": [],
      "warnings": [],
      "details": {
        "doc_files_checked": 5
      }
    },
    {
      "test_name": "Format Compliance",
      "category": "Infrastructure",
      "passed": false,
      "execution_time": 0.0030128955841064453,
      "errors": [
        "lecture_01_narrative.md: Non-standard header formatting",
        "PHASE_1_WEEK_2_COMPLETION_REPORT.md: Non-standard header formatting",
        "README.md: Non-standard header formatting",
        "EXECUTIVE_APPROVAL_PACKAGE.md: Non-standard header formatting",
        "PHASE_1_WEEKS_3-4_STRATEGIC_PLAN.md: Non-standard header formatting",
        "PHASE_1_WEEKS_3_4_COMPREHENSIVE_GAP_ANALYSIS.md: Non-standard header formatting",
        "LEARNING_OBJECTIVES_FRAMEWORK.md: Non-standard header formatting",
        "CONTENT_INTEGRATION_BRIDGE_MATERIALS.md: Non-standard header formatting",
        "practice_problems.md: Non-standard header formatting",
        "technology_stack_optimization.md: Non-standard header formatting",
        "system_architecture.md: Non-standard header formatting",
        "integration_design.md: Non-standard header formatting"
      ],
      "warnings": [],
      "details": {
        "markdown_files": 14
      }
    },
    {
      "test_name": "Cross-Platform Compatibility",
      "category": "Infrastructure",
      "passed": false,
      "execution_time": 0.0013892650604248047,
      "errors": [
        "demo_lecture_01.py: Potential hardcoded Windows paths",
        "test_validation_suite.py: Potential hardcoded Windows paths",
        "euler_problem_1.py: Potential hardcoded Windows paths",
        "hello_ds.py: Potential hardcoded Windows paths",
        "batch_converter.py: Potential hardcoded Windows paths",
        "quality_validator.py: Potential hardcoded Windows paths"
      ],
      "warnings": [
        "test_validation_suite.py: Uses Unix-specific command 'ls'",
        "test_validation_suite.py: Uses Unix-specific command 'cat'",
        "test_validation_suite.py: Uses Unix-specific command 'grep'",
        "test_validation_suite.py: Uses Unix-specific command 'head'",
        "test_validation_suite.py: Uses Unix-specific command 'tail'"
      ],
      "details": {}
    },
    {
      "test_name": "File Encoding",
      "category": "Infrastructure",
      "passed": true,
      "execution_time": 0.0019459724426269531,
      "errors": [],
      "warnings": [
        "demo_lecture_01.py: Contains non-ASCII characters",
        "test_validation_suite.py: Contains non-ASCII characters",
        "hello_ds.py: Contains non-ASCII characters",
        "batch_converter.py: Contains non-ASCII characters",
        "quality_validator.py: Contains non-ASCII characters",
        "lecture_01_narrative.md: Contains non-ASCII characters",
        "PHASE_1_WEEK_2_COMPLETION_REPORT.md: Contains non-ASCII characters",
        "README.md: Contains non-ASCII characters",
        "EXECUTIVE_APPROVAL_PACKAGE.md: Contains non-ASCII characters",
        "PHASE_1_WEEKS_3-4_STRATEGIC_PLAN.md: Contains non-ASCII characters",
        "PHASE_1_WEEKS_3_4_COMPREHENSIVE_GAP_ANALYSIS.md: Contains non-ASCII characters",
        "LEARNING_OBJECTIVES_FRAMEWORK.md: Contains non-ASCII characters",
        "CONTENT_INTEGRATION_BRIDGE_MATERIALS.md: Contains non-ASCII characters",
        "python_syntax_reference.md: Contains non-ASCII characters",
        "technology_stack_optimization.md: Contains non-ASCII characters",
        "system_architecture.md: Contains non-ASCII characters",
        "integration_design.md: Contains non-ASCII characters"
      ],
      "details": {
        "files_checked": 20
      }
    },
    {
      "test_name": "Learning Objectives Coverage",
      "category": "Assessment",
      "passed": true,
      "execution_time": 0.0010724067687988281,
      "errors": [],
      "warnings": [],
      "details": {
        "objectives_covered": 8,
        "total_objectives": 8,
        "coverage_rate": 1.0
      }
    },
    {
      "test_name": "Skills Practice Adequacy",
      "category": "Assessment",
      "passed": true,
      "execution_time": 0.00015401840209960938,
      "errors": [],
      "warnings": [],
      "details": {
        "total_exercises": 3,
        "python_exercises": 2,
        "exercise_diversity": 4
      }
    },
    {
      "test_name": "Exercise-Objective Alignment",
      "category": "Assessment",
      "passed": true,
      "execution_time": 0.00022268295288085938,
      "errors": [],
      "warnings": [],
      "details": {
        "mentioned_skills": 7,
        "practiced_skills": 7,
        "alignment_rate": 1.0
      }
    }
  ]
}