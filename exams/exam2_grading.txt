# DS-217 Exam 2 Grading System

Point Structure:
- Total points: 100 (plus 10 bonus)
- Q1: Data Preparation (20 pts)
- Q2: Data Analysis (25 pts)
- Q3: Statistical Analysis (25 pts)
- Q4: Data Visualization (30 pts)
- Bonus: Advanced Features (10 pts)

## DETAILED CRITERIA

### Question 1: Data Preparation (20 points)
1.1 Successfully runs generate_dirty_data.py and creates ms_data_dirty.csv (3 pts)
1.2 Data cleaning operations (10 pts):
    - Removes comment lines (1)
    - Removes empty lines (1)
    - Removes extra commas (1)
    - Extracts correct columns in order (2)
    - Implements error handling (2)
    - Validates data types and ranges (2)
    - Documents cleaning process (1)
1.3 Creates insurance.lst with valid categories (3 pts)
    - At least 3 categories (1)
    - Proper formatting (1)
    - Documentation of category definitions (1)
1.4 Generates correct data summary (4 pts):
    - Comprehensive statistics (2)
    - Data quality metrics (2)

### Question 2: Data Analysis (25 points)
2.1 Data loading and structure (8 pts):
    - Loads CSV with error handling (2)
    - Converts dates with timezone handling (2)
    - Implements efficient sorting (2)
    - Validates data types with constraints (2)
    - Correctly generates insurance.lst (2)
2.2 Insurance information (9 pts):
    - Reads insurance types with validation (2)
    - Implements consistent assignment algorithm (3)
    - Generates realistic costs with documentation (4)
2.3 Summary statistics (8 pts):
    - Walking speed analysis with outlier detection (2)
    - Cost analysis with confidence intervals (2)
    - Age effects with multiple approaches (2)

### Question 3: Statistical Analysis (25 points)
3.1 Walking speed analysis (8 pts):
    - Multiple regression with diagnostics (3)
    - Repeated measures with proper nesting (3)
    - Trend testing with assumptions verified (2)
3.2 Cost analysis (8 pts):
    - Insurance effect with multiple tests (3)
    - Distribution analysis with normality tests (2)
    - Effect size with power analysis (3)
3.3 Advanced analysis (9 pts):
    - Interaction analysis with visualization (3)
    - Confounder identification and control (3)
    - Comprehensive statistical reporting (3)

### Question 4: Data Visualization (30 points)
4.1 Walking speed visualizations (10 pts):
    - Advanced scatter plot (3):
        * Proper axis scales
        * Color coding
        * Confidence bands
    - Enhanced box plots (3):
        * Outlier identification
        * Statistical annotations
        * Clear formatting
    - Complex interaction plot (4):
        * Multiple variables
        * Clear legend
        * Proper formatting
4.2 Cost visualizations (10 pts):
    - Advanced bar plot (3):
        * Error bars
        * Statistical annotations
        * Clear formatting
    - Enhanced box plots (3):
        * Outlier handling
        * Multiple groupings
        * Clear formatting
    - Statistical overlays (4):
        * Distribution curves
        * Significance indicators
        * Multiple comparisons
4.3 Combined visualizations (10 pts):
    - Advanced pair plot (3):
        * Proper variable selection
        * Statistical annotations
        * Clear formatting
    - Complex faceted plots (4):
        * Multiple variables
        * Clear organization
        * Proper formatting
    - Time series analysis (3):
        * Trend identification
        * Seasonal decomposition
        * Clear formatting

### Bonus Points (10 points)
- Advanced statistical methods (3):
    * Machine learning approaches
    * Advanced regression techniques
    * Cross-validation
- Interactive visualizations (3):
    * Multiple interaction types
    * Clear user interface
    * Proper documentation
- Additional pattern analysis (2):
    * Novel insights
    * Clear documentation
- Command-line argument parsing (2):
    * Multiple options
    * Error handling
    * Documentation

## GRADING INSTRUCTIONS

1. Submissions Location:
   - Base directory: exams/09-second-exam-submissions/
   - Format: 09-second-exam-USERNAME/
   - Example: 09-second-exam-bobachubs/

2. Required Files in Each Submission:
   - prepare.sh
   - ms_data.csv
   - insurance.lst
   - analyze_visits.py
   - stats_analysis.py
   - visualize.ipynb
   - readme.md

3. Evaluation Process:
   - Review each file against criteria above
   - Test functionality where applicable
   - Assess code quality and documentation
   - Consider partial credit for incomplete implementations
   - Note exceptional work
   - Verify all requirements are met for full points
   - Check for proper error handling and edge cases
   - Evaluate code efficiency and organization

4. Path Handling:
   - You may fix hard-coded paths in student code to enable testing
   - Apply a 5-point penalty if path fixes were required
   - Document any path fixes in the feedback
   - This is the ONLY correction you may make to student code

5. Output Format:
   Save results to: exams/09-second-exam-scores.tsv
   
   Format example (tab-separated, one row per submission):
   ```
   username	total	q1_total	q2_total	q3_total	q4_total	bonus_total	1.1	1.2	1.3	1.4	2.1	2.2	2.3	3.1	3.2	3.3	4.1	4.2	4.3	bonus
   ```
   
   Where:
   - username: Extracted from submission directory name
   - total: Overall score (max 100)
   - q1_total: Data Preparation total (max 20)
   - q2_total: Data Analysis total (max 25)
   - q3_total: Statistical Analysis total (max 25)
   - q4_total: Data Visualization total (max 30)
   - bonus_total: Bonus points (max 10)
   - 1.1-4.3: Individual component scores (points specified in criteria above)
   - bonus: Additional points (max 10)

   Example row:
   ```
   bobachubs	95	18	24	23	30	8	5	7	2	4	8	8	8	7	8	8	10	10	10	8
   ```

6. Guidelines:
   - Missing files result in 0 points for affected components
   - Award partial credit based on implementation quality
   - Consider creative solutions that meet requirements
   - Document point deductions clearly
   - Note exceptional implementations
   - Be consistent in point allocation
   - Consider the holistic implementation
   - Apply path fix penalty (-5) if needed
   - Full points require meeting ALL criteria for each component
   - Deduct points for missing error handling or validation
   - Consider code efficiency and organization
   - Evaluate documentation completeness
